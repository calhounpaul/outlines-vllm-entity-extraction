[
    {
        "entityDeclarations": [
            {
                "name": "ApplicationDbContext",
                "type": "class"
            },
            {
                "name": "Request",
                "type": "class",
                "description": "Model representing a Request"
            },
            {
                "name": "MemberID",
                "type": "interface",
                "description": "Property for Member's ID"
            },
            {
                "name": "AgentID",
                "type": "interface",
                "description": "Property for Agent's ID"
            },
            {
                "name": "RequestStatus",
                "type": "enum",
                "description": "Enumeration of Request Status"
            }
        ],
        "methodDeclarations": [
            {
                "name": "GetRecentPendingRequests",
                "type": "method",
                "description": "GET api/GetRecentPendingRequests. Retrieves recent pending requests for the authenticated agent.",
                "httpMethod": "GET",
                "route": "GetRecentPendingRequests",
                "parameters": [
                    {
                        "name": "none",
                        "type": "string",
                        "description": "No parameters"
                    }
                ]
            },
            {
                "name": "GetRequests",
                "type": "method",
                "description": "GET api/Requests. Retrieves all requests for the authenticated user.",
                "httpMethod": "GET",
                "route": "Requests",
                "parameters": [
                    {
                        "name": "none",
                        "type": "string",
                        "description": "No parameters"
                    }
                ]
            },
            {
                "name": "GetRequest",
                "type": "method",
                "description": "GET api/Requests/{id}. Retrieves a specific request by ID.",
                "httpMethod": "GET",
                "route": "Requests/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "type": "int",
                        "description": "Request ID"
                    }
                ]
            },
            {
                "name": "PutRequest",
                "type": "method",
                "description": "PUT api/Requests/{id}. Updates a specific request by ID.",
                "httpMethod": "PUT",
                "route": "Requests/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "type": "int",
                        "description": "Request ID"
                    },
                    {
                        "name": "request",
                        "type": "bool",
                        "description": "Updated request object"
                    }
                ]
            },
            {
                "name": "PostRequest",
                "type": "method",
                "description": "POST api/Requests. Creates a new request.",
                "httpMethod": "POST",
                "route": "Requests",
                "parameters": [
                    {
                        "name": "request",
                        "type": "bool",
                        "description": "New request object"
                    }
                ]
            },
            {
                "name": "DeleteRequest",
                "type": "method",
                "description": "DELETE api/Requests/{id}. Deletes a specific request by ID.",
                "httpMethod": "DELETE",
                "route": "Requests/{id}",
                "parameters": [
                    {
                        "name": "id",
                        "type": "int",
                        "description": "Request ID"
                    }
                ]
            }
        ],
        "propertyDeclarations": [
            {
                "name": "db",
                "type": "int",
                "description": "Private instance of ApplicationDbContext",
                "accessibility": "Private"
            },
            {
                "name": "strCurrentUserId",
                "type": "string",
                "description": "Holds the ID of the authenticated user",
                "accessibility": "Private"
            }
        ]
    }
]