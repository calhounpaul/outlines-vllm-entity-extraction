[
    {
        "entityDeclarations": [
            {
                "name": "ApplicationDbContext",
                "type": "class",
                "description": "Context for the application database."
            },
            {
                "name": "StartQuiz",
                "type": "class",
                "description": "Initialization class for quiz."
            },
            {
                "name": "TakeQuizApiController",
                "type": "class",
                "description": "API controller for handling quiz-related operations."
            },
            {
                "name": "StudentTopicQuiz",
                "type": "class",
                "description": "Entity representing a student's quiz information."
            }
        ],
        "methodDeclarations": [
            {
                "name": "ShowNumbers",
                "type": "method",
                "description": "Retrieves the list of questions for the current user in order.",
                "httpMethod": "GET",
                "route": "api/TakeQuizApi/ShowNumbers",
                "parameters": [
                    {
                        "name": "none",
                        "type": "string",
                        "description": "none (implicitly accessed through User.Identity.GetUserName())"
                    }
                ]
            },
            {
                "name": "Menu",
                "type": "method",
                "description": "Retrieves the list of questions for the given student and module.",
                "httpMethod": "GET",
                "route": "api/TakeQuizApi/Menu",
                "parameters": [
                    {
                        "name": "studentId",
                        "type": "string",
                        "description": "Student ID"
                    },
                    {
                        "name": "ModuleId",
                        "type": "int",
                        "description": "Module ID for the questions."
                    }
                ]
            },
            {
                "name": "GetSelectSubject",
                "type": "method",
                "description": "Creates a new quiz for the given student and module if one does not exist, else returns the existing",
                "httpMethod": "GET",
                "route": "api/TakeQuizApi/GetSelectSubject",
                "parameters": [
                    {
                        "name": "ModuleId",
                        "type": "int",
                        "description": "Module ID for the questions."
                    },
                    {
                        "name": "email",
                        "type": "string",
                        "description": "Student email address"
                    }
                ]
            },
            {
                "name": "Exam",
                "type": "method",
                "description": "Retrieves the question with the given number for the specified student and module.",
                "httpMethod": "GET",
                "route": "api/TakeQuizApi/Exam",
                "parameters": [
                    {
                        "name": "questionNo",
                        "type": "int",
                        "description": "Question number"
                    },
                    {
                        "name": "ModuleId",
                        "type": "int",
                        "description": "Module ID for the questions."
                    },
                    {
                        "name": "studentid",
                        "type": "string",
                        "description": "Student ID"
                    }
                ]
            },
            {
                "name": "ExamIndex",
                "type": "method",
                "description": "Updates the exam index with the student's information.",
                "httpMethod": "POST",
                "route": "api/TakeQuizApi/ExamIndex",
                "parameters": [
                    {
                        "name": "studentId",
                        "type": "string",
                        "description": "Student ID"
                    },
                    {
                        "name": "topicId",
                        "type": "int",
                        "description": "Topic ID (optional)"
                    },
                    {
                        "name": "score",
                        "type": "string",
                        "description": "Student's score"
                    }
                ]
            }
        ],
        "propertyDeclarations": []
    }
]